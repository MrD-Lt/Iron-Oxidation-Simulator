name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: |
            ~/miniconda3/pkgs
            ~/miniconda3/envs
          key: ${{ runner.os }}-conda-${{ hashFiles('Project/IronOxidationSimulator/config/environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: my-environment
          environment-file: Project/IronOxidationSimulator/config/environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda env update --file Project/IronOxidationSimulator/config/environment.yml --prune
          conda list

      - name: Show Python version
        shell: bash -l {0}
        run: python --version

      - name: Install PyInstaller
        shell: bash -l {0}
        run: pip install pyinstaller

      - name: Build with PyInstaller (default)
        shell: bash -l {0}
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile --paths ".\\Project\\IronOxidationSimulator\\src" --add-data ".\\Project\\IronOxidationSimulator\\assets;./assets" --add-data ".\\Project\\IronOxidationSimulator\\src\\ui;./ui" .\\Project\\IronOxidationSimulator\\src\\mainwindow.py
          else
            pyinstaller --onefile --paths "./Project/IronOxidationSimulator/src" --add-data "./Project/IronOxidationSimulator/assets:./assets" --add-data "./Project/IronOxidationSimulator/src/ui:./ui" ./Project/IronOxidationSimulator/src/mainwindow.py
          fi

      - name: Upload artifact (default)
        uses: actions/upload-artifact@v2
        with:
          name: ddz-default-${{ matrix.os }}
          path: dist/

      - name: Clean up
        shell: bash -l {0}
        run: |
          rm -rf build dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            if [[ -f ".\\Project\\IronOxidationSimulator\\src\\mainwindow.spec" ]]; then
              rm .\\Project\\IronOxidationSimulator\\src\\mainwindow.spec
            fi
          else
            if [[ -f "./Project/IronOxidationSimulator/src/mainwindow.spec" ]]; then
              rm ./Project/IronOxidationSimulator/src/mainwindow.spec
            fi
          fi


      - name: Build with PyInstaller (noconsole and noupx)
        shell: bash -l {0}
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile --noconsole --noupx --paths ".\\Project\\IronOxidationSimulator\\src" --add-data ".\\Project\\IronOxidationSimulator\\assets;./assets" --add-data ".\\Project\\IronOxidationSimulator\\src\\ui;./ui" .\\Project\\IronOxidationSimulator\\src\\mainwindow.py
          else
            pyinstaller --onefile --windowed --noupx --paths "./Project/IronOxidationSimulator/src" --add-data "./Project/IronOxidationSimulator/assets:./assets" --add-data "./Project/IronOxidationSimulator/src/ui:./ui" ./Project/IronOxidationSimulator/src/mainwindow.py
          fi

      - name: Upload artifact (noconsole and noupx)
        uses: actions/upload-artifact@v2
        with:
          name: ddz-noconsole-noupx-${{ matrix.os }}
          path: dist/
